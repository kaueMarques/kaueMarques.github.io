name: gera kt

on:
  issues:
    types: [labeled, completed, reopened] 

jobs:
  create-page:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add execution permissions to scripts in file-creation-script
        run: find ./.github/workflows/file-creation-script -type f -name "*.sh" -exec chmod +x {} \;

      - name: Check for 'kt-video' label
        run: |
          issue_number=${{ github.event.issue.number }}
          repo_owner=${{ github.repository_owner }}
          repo_name=${{ github.event.repository.name }}
          labels=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${repo_owner}/${repo_name}/issues/${issue_number}/labels" | jq -r '.[].name')
          if [[ ! " ${labels[@]} " =~ " kt-video " ]]; then
            exit 1
          fi

      - name: Create _posts directory
        run: mkdir -p _posts

      - name: Extract issue content
        id: extract_issue
        run: |
          date=$(date -u +"%Y-%m-%d")
          title="${{ github.event.issue.title }}"
          sanitized_title=$(echo "${title}" | tr -cd '[:alnum:]-' | tr ' ' '-')
          filename="_posts/${date}-${sanitized_title}.md"
          body="${{ github.event.issue.body }}"
          link_video=$(echo "$body" | grep -oP '(?<=https://www.youtube.com/watch\?v=|https://youtu.be/)[^ ]+')
          body=$(echo "$body" | sed -E "s|https://www.youtube.com/watch\\?v=${link_video}||g; s|https://youtu.be/${link_video}||g")
          iframe='<iframe width="560" height="315" src="https://www.youtube.com/embed/${link_video}" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>'
          echo "::set-output name=filename::$filename"
          echo "::set-output name=iframe::$iframe"
          echo "::set-output name=body::$body"

      - name: Remove existing file if it exists
        run: |
          if [ -f "${{ steps.extract_issue.outputs.filename }}" ]; then
            rm "${{ steps.extract_issue.outputs.filename }}"
          fi

      - name: Run header creation script
        run: ./.github/workflows/file-creation-script/header.sh "_posts" "${{ github.event.issue.title }}" "$(date -u +"%Y-%m-%d")" "gh-action,kt-video"

      - name: Append content to file
        run: |
          {
            echo ""
            echo "${{ steps.extract_issue.outputs.iframe }}"
            echo ""
            echo "${{ steps.extract_issue.outputs.body }}"
          } >> "${{ steps.extract_issue.outputs.filename }}"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push
        run: |
          git checkout -b "kt-video-${{ github.event.issue.number }}"
          git add .
          git commit -m "[KT]: ${{ github.event.issue.title }}"
          git push origin "kt-video-${{ github.event.issue.number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.NEW_PAGE_TOKEN }}
